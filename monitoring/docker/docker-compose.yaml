version: '3'

volumes:
  prometheus_data: {}  
  grafana-data: {}      

services:

### Virtual machine metrics - CPU, Memory, Network
  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    restart: unless-stopped
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    ports:
      - 9100

### Example to stop

  foobar-exporter:
    image: prom/node-exporter:latest
    container_name: foobar-exporter
    restart: unless-stopped
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    ports:
      - 9100
      
# Prometheus Server      
  prometheus:
    container_name: prometheus
    hostname: prometheus
    image: prom/prometheus
    volumes:
      - ./prometheus:/etc/prometheus/
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - 9090

# Grafana

  grafana:
    container_name: grafana
    hostname: grafana
    image: grafana/grafana
    ports:
      - 3000
    restart: unless-stopped
    volumes:
      - ./grafana/provisioning/:/etc/grafana/provisioning/
      - grafana-data:/var/lib/grafana
    env_file:
      - ./grafana/config.monitoring
  alertmanager:
    container_name: alertmanager 
    image: prom/alertmanager:v0.23.0
    restart: unless-stopped
    ports:
      - "9093"
    volumes:
      - "./alertmanager:/config"
    command: --config.file=/config/alertmanager.yaml --log.level=debug         

## receive the alert 

  mailhog:
      image: jcalonso/mailhog
      container_name: 'mailhog'
      ports:
        - "1025:1025"
        - "8025:8025"

#NGINX to Proxy

  app:
    image: 'jc21/nginx-proxy-manager:latest'
    ports:
      - '80:80'
      - '81:81'
      - '443:443'
    environment:
      DB_MYSQL_HOST: "db"
      DB_MYSQL_PORT: 3306
      DB_MYSQL_USER: "npm"
      DB_MYSQL_PASSWORD: "npm"
      DB_MYSQL_NAME: "npm"
    volumes:
      - ./nginx/data:/data
      - ./nginx/letsencrypt:/etc/letsencrypt
  db:
    image: 'jc21/mariadb-aria:latest'
    environment:
      MYSQL_ROOT_PASSWORD: 'npm'
      MYSQL_DATABASE: 'npm'
      MYSQL_USER: 'npm'
      MYSQL_PASSWORD: 'npm'
    volumes:
      - ./mysql/data/mysql:/var/lib/mysql  
  
# Dashboard to the Services

  heimdall:
    image: lscr.io/linuxserver/heimdall:latest
    container_name: heimdall
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=US/Atlanta
    volumes:
      - ./heimdall/config:/config
    ports:
      - 80
      - 443
    restart: unless-stopped